package data

import (
	"bytes"
	"compress/gzip"
	"io"
)

// device_csv returns raw, uncompressed file data.
func device_csv() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x84, 0x91,
		0xcd, 0x4e, 0xc3, 0x30, 0x10, 0x84, 0xef, 0x7d, 0x8a, 0x3e, 0x40, 0x8a,
		0x52, 0x7e, 0x0e, 0x1c, 0x43, 0x1a, 0x05, 0x09, 0xb5, 0xb1, 0x5a, 0x93,
		0x96, 0x13, 0xda, 0xa6, 0x2b, 0x62, 0x61, 0x7b, 0x2d, 0xdb, 0x01, 0xfa,
		0xf6, 0xb8, 0xd0, 0xd2, 0x38, 0xaa, 0xc4, 0x29, 0x99, 0x6f, 0x66, 0xb5,
		0x6b, 0xcd, 0x6d, 0xc2, 0xd0, 0x3a, 0xd2, 0x20, 0xc7, 0x0d, 0x29, 0xd3,
		0x79, 0xb4, 0xc9, 0x5a, 0xe8, 0x1d, 0x7d, 0xba, 0xd1, 0x25, 0x6f, 0x0e,
		0x8d, 0xd0, 0x9e, 0x5c, 0x7b, 0xd1, 0xdd, 0x4c, 0xa7, 0xa3, 0x34, 0xe1,
		0xb0, 0x95, 0xe8, 0x13, 0xc1, 0x60, 0x17, 0xd4, 0x4a, 0x81, 0xf5, 0xa6,
		0x25, 0x8d, 0x81, 0x1c, 0x3e, 0x31, 0x2b, 0xf9, 0x44, 0xdc, 0xdf, 0xa5,
		0x69, 0x4c, 0x8f, 0x27, 0x8c, 0x4f, 0x03, 0x25, 0x28, 0x0c, 0x6b, 0xb4,
		0x23, 0x89, 0xc9, 0x22, 0x5c, 0x80, 0xc1, 0x1f, 0x72, 0x26, 0x61, 0xef,
		0x3c, 0x78, 0x41, 0x7a, 0x68, 0x6d, 0xb6, 0xf4, 0x35, 0x64, 0xd5, 0xf3,
		0x4b, 0x76, 0xda, 0x3a, 0xe6, 0xf5, 0xef, 0x0f, 0xaf, 0xaf, 0xd3, 0xe9,
		0x4d, 0x1f, 0x17, 0xae, 0x01, 0x83, 0x51, 0x70, 0x9e, 0x2d, 0xf9, 0x84,
		0xd7, 0xff, 0xb1, 0xdc, 0xe2, 0x82, 0x3e, 0xa0, 0x8f, 0x4a, 0xa2, 0x37,
		0x89, 0x71, 0x2c, 0x33, 0x66, 0x88, 0x9e, 0xf6, 0x92, 0xfa, 0x9a, 0x55,
		0xf5, 0x6b, 0x9c, 0x98, 0xaf, 0x1f, 0xfa, 0x72, 0x81, 0x3e, 0x07, 0xe7,
		0xaf, 0xe2, 0xd0, 0x2c, 0x96, 0x85, 0x33, 0x02, 0x64, 0x34, 0x56, 0xf0,
		0x38, 0xb2, 0xa4, 0xf7, 0x2e, 0xe8, 0x35, 0x82, 0x3d, 0x94, 0x78, 0x6e,
		0xb6, 0x94, 0xe0, 0x5c, 0x70, 0xd8, 0x2c, 0x4b, 0x18, 0x48, 0x55, 0xad,
		0x7a, 0x62, 0x45, 0x9d, 0x6d, 0xf0, 0x08, 0x4e, 0xd5, 0xe5, 0x45, 0x00,
		0x95, 0x6f, 0x0f, 0xc3, 0x3f, 0xaf, 0xde, 0x92, 0xff, 0x23, 0x99, 0x81,
		0xa6, 0xc5, 0xc9, 0xa3, 0xf7, 0x26, 0x97, 0x02, 0xf5, 0xd9, 0x51, 0x5d,
		0x4e, 0x4a, 0x81, 0xde, 0xa1, 0x1d, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff,
		0x82, 0x6b, 0xac, 0x9f, 0x9d, 0x02, 0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
