package data

import (
	"bytes"
	"compress/gzip"
	"io"
)

// browser_csv returns raw, uncompressed file data.
func browser_csv() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x8c, 0x94,
		0xc1, 0x72, 0xd3, 0x30, 0x10, 0x86, 0xef, 0x7d, 0x0a, 0x8f, 0xcf, 0xd0,
		0xc2, 0x70, 0xe3, 0x16, 0x27, 0x9d, 0xe9, 0xa1, 0x6d, 0x66, 0x02, 0x03,
		0x0c, 0x17, 0x66, 0x65, 0x2f, 0xb1, 0xb0, 0xa4, 0xcd, 0xc8, 0x72, 0xdd,
		0xf4, 0xe9, 0x51, 0x1c, 0x6c, 0xc9, 0x5e, 0x3b, 0xe4, 0xb4, 0xdf, 0xbf,
		0xff, 0xe7, 0x4c, 0x12, 0x25, 0x4a, 0x3f, 0xa4, 0xef, 0xd2, 0xcc, 0x52,
		0x5b, 0xa3, 0xf5, 0xf4, 0x69, 0xf3, 0x25, 0x09, 0xe9, 0x59, 0x1a, 0x87,
		0xa6, 0xa0, 0xc4, 0xaf, 0xd3, 0x9b, 0x89, 0xba, 0x12, 0xa4, 0xa4, 0x16,
		0xe0, 0xb1, 0x74, 0xee, 0xf0, 0xf9, 0xee, 0xae, 0x6d, 0xdb, 0xdb, 0x7e,
		0x7b, 0x5b, 0xe0, 0xa5, 0x27, 0x06, 0x64, 0xce, 0x19, 0x23, 0x62, 0x46,
		0x4e, 0x94, 0x8c, 0x23, 0x77, 0x94, 0x44, 0xf3, 0x9b, 0x6c, 0x8e, 0xe3,
		0xc0, 0x3c, 0x0d, 0xc7, 0xd3, 0xdb, 0x81, 0x6e, 0xf2, 0x56, 0xee, 0x21,
		0x59, 0xb5, 0x28, 0xfa, 0xf0, 0x7e, 0xf5, 0xdd, 0x87, 0x79, 0xef, 0x1b,
		0x1d, 0x61, 0x1f, 0x72, 0x1f, 0xe7, 0x64, 0xf2, 0xf3, 0x69, 0xb7, 0x7e,
		0xd8, 0x6d, 0x9f, 0xee, 0xb9, 0xb0, 0x7d, 0x4c, 0xee, 0x5f, 0x0f, 0x8a,
		0x6c, 0x1f, 0xaf, 0x50, 0xb2, 0x46, 0xaa, 0x82, 0x7b, 0x96, 0x2c, 0x0c,
		0x93, 0xb5, 0x2f, 0x60, 0x5c, 0xb2, 0x94, 0xaf, 0xb2, 0x97, 0xe4, 0x0c,
		0x64, 0xd1, 0x44, 0xb2, 0x38, 0x65, 0xb1, 0x24, 0x23, 0x68, 0x2b, 0xbb,
		0x33, 0x1f, 0x90, 0x3b, 0x64, 0xf0, 0x35, 0x00, 0xeb, 0x15, 0xe4, 0x95,
		0x90, 0xb6, 0x18, 0xf1, 0xac, 0xf5, 0x00, 0x6d, 0x35, 0x62, 0x66, 0x91,
		0x72, 0xfd, 0x58, 0xea, 0xb6, 0x8f, 0x5f, 0x79, 0xd7, 0xd1, 0x8f, 0x88,
		0xe6, 0x8c, 0x37, 0x88, 0x89, 0x19, 0x8d, 0xf9, 0x03, 0x4a, 0x11, 0x8d,
		0x78, 0x6a, 0xad, 0x41, 0x4b, 0x43, 0x01, 0x96, 0xfb, 0x52, 0x6a, 0x9c,
		0x39, 0xfa, 0x75, 0x09, 0x96, 0x4c, 0x00, 0xde, 0x63, 0x5d, 0x4a, 0x8b,
		0x31, 0xde, 0xa4, 0x1f, 0x27, 0x8e, 0x25, 0x8d, 0x01, 0xf8, 0x6b, 0xf8,
		0xb5, 0x6c, 0x74, 0x8c, 0xcc, 0x21, 0xa8, 0xdd, 0x30, 0x79, 0xab, 0x1a,
		0x2d, 0x9a, 0x3a, 0x46, 0xee, 0x68, 0x74, 0xd9, 0xf9, 0xe0, 0x03, 0xcf,
		0x58, 0xe4, 0xaf, 0xb1, 0x8d, 0x85, 0xfd, 0xf9, 0x63, 0x77, 0xf9, 0xd7,
		0xbf, 0xcc, 0x6d, 0x53, 0xa1, 0xff, 0xcb, 0xc4, 0x78, 0xc1, 0xc9, 0x97,
		0x1d, 0x52, 0xcf, 0xf4, 0x42, 0x31, 0x72, 0x67, 0x47, 0x7a, 0x98, 0xac,
		0xb5, 0xf0, 0x76, 0x4c, 0x96, 0xf2, 0xd4, 0xde, 0x20, 0x1e, 0x0c, 0xba,
		0xf8, 0x6a, 0x60, 0x2b, 0xfe, 0x8c, 0xff, 0xce, 0x46, 0xc4, 0x8d, 0xba,
		0x1a, 0x2e, 0xe5, 0x28, 0x30, 0x4f, 0xfa, 0xdf, 0xea, 0x30, 0x59, 0x4b,
		0xf9, 0x4f, 0x5f, 0x40, 0x8c, 0xdc, 0x21, 0xa1, 0x30, 0xc0, 0x7f, 0xfb,
		0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xb9, 0xc5, 0xe6, 0xbd, 0x06,
		0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
